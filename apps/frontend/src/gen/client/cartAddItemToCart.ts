/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@/client'
import type { CartAddItemToCartMutationRequest, CartAddItemToCartMutationResponse, CartAddItemToCart422 } from '../types/CartAddItemToCart.ts'
import type { RequestConfig, ResponseErrorConfig } from '@/client'

function getCartAddItemToCartUrl() {
  return `/api/v1/cart/items` as const
}

/**
 * @description Add an item to the shopping cart.Adds a product with a specified quantity to the user's cart.If the product already exists in the cart, its quantity is increased.A cart is created for the user if one doesn't exist.Args:    item_in: The cart item details (product_id, quantity).    session: The database session dependency.    current_user: The authenticated user dependency.Returns:    The created or updated cart item.
 * @summary Add Item To Cart
 * {@link /api/v1/cart/items}
 */
export async function cartAddItemToCart(
  data: CartAddItemToCartMutationRequest,
  config: Partial<RequestConfig<CartAddItemToCartMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<CartAddItemToCartMutationResponse, ResponseErrorConfig<CartAddItemToCart422>, CartAddItemToCartMutationRequest>({
    method: 'POST',
    url: getCartAddItemToCartUrl().toString(),
    data,
    ...requestConfig,
  })
  return res
}