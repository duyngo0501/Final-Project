/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@/client'
import type { CartReadCartQueryResponse } from '../types/CartReadCart.ts'
import type { RequestConfig, ResponseErrorConfig } from '@/client'

function getCartReadCartUrl() {
  return `/api/v1/cart/` as const
}

/**
 * @description Retrieve the current user's shopping cart.Retrieves the cart associated with the authenticated user.If no cart exists, a new empty cart is created and returned.Args:    session: The database session dependency.    current_user: The authenticated user dependency.Returns:    The user's cart.
 * @summary Read Cart
 * {@link /api/v1/cart/}
 */
export async function cartReadCart(config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<CartReadCartQueryResponse, ResponseErrorConfig<Error>, unknown>({
    method: 'GET',
    url: getCartReadCartUrl().toString(),
    ...requestConfig,
  })
  return res
}