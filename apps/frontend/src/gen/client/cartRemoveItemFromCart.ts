/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@/client'
import type { CartRemoveItemFromCartMutationResponse, CartRemoveItemFromCartPathParams, CartRemoveItemFromCart422 } from '../types/CartRemoveItemFromCart.ts'
import type { RequestConfig, ResponseErrorConfig } from '@/client'

function getCartRemoveItemFromCartUrl(product_id: CartRemoveItemFromCartPathParams['product_id']) {
  return `/api/v1/cart/items/${product_id}` as const
}

/**
 * @description Remove an item from the shopping cart.Deletes a specific product from the user's cart.Args:    product_id: The UUID of the product to remove.    session: The database session dependency.    current_user: The authenticated user dependency.Returns:    None. Returns 204 No Content on success.Raises:    HTTPException (404): If the cart or item is not found.
 * @summary Remove Item From Cart
 * {@link /api/v1/cart/items/:product_id}
 */
export async function cartRemoveItemFromCart(
  product_id: CartRemoveItemFromCartPathParams['product_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<CartRemoveItemFromCartMutationResponse, ResponseErrorConfig<CartRemoveItemFromCart422>, unknown>({
    method: 'DELETE',
    url: getCartRemoveItemFromCartUrl(product_id).toString(),
    ...requestConfig,
  })
  return res
}