/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@/client'
import type {
  CartUpdateCartItemQuantityMutationRequest,
  CartUpdateCartItemQuantityMutationResponse,
  CartUpdateCartItemQuantityPathParams,
  CartUpdateCartItemQuantity422,
} from '../types/CartUpdateCartItemQuantity.ts'
import type { RequestConfig, ResponseErrorConfig } from '@/client'

function getCartUpdateCartItemQuantityUrl(product_id: CartUpdateCartItemQuantityPathParams['product_id']) {
  return `/api/v1/cart/items/${product_id}` as const
}

/**
 * @description Update the quantity of an item in the cart.Sets the quantity for a specific product in the user's cart.Args:    product_id: The UUID of the product to update.    item_in: The new quantity details.    session: The database session dependency.    current_user: The authenticated user dependency.Returns:    The updated cart item.Raises:    HTTPException (404): If the cart or item is not found.
 * @summary Update Cart Item Quantity
 * {@link /api/v1/cart/items/:product_id}
 */
export async function cartUpdateCartItemQuantity(
  product_id: CartUpdateCartItemQuantityPathParams['product_id'],
  data: CartUpdateCartItemQuantityMutationRequest,
  config: Partial<RequestConfig<CartUpdateCartItemQuantityMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    CartUpdateCartItemQuantityMutationResponse,
    ResponseErrorConfig<CartUpdateCartItemQuantity422>,
    CartUpdateCartItemQuantityMutationRequest
  >({ method: 'PUT', url: getCartUpdateCartItemQuantityUrl(product_id).toString(), data, ...requestConfig })
  return res
}