/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { cartItemCreateSchemaSchema } from './cartItemCreateSchemaSchema.ts'
import { cartItemResponseSchemaSchema } from './cartItemResponseSchemaSchema.ts'
import { HTTPValidationErrorSchema } from './HTTPValidationErrorSchema.ts'
import { z } from 'zod'

/**
 * @description Successful Response
 */
export const cartAddItemToCart201Schema = z
  .lazy(() => cartItemResponseSchemaSchema)
  .describe(
    'Schema for representing a cart item in API responses.\n\nIncludes the unique ID of the cart item entry itself, in addition\nto base properties.\n\nAttributes:\n    id: The unique identifier (UUID) of this specific cart entry.\n    cart_id: The unique identifier (UUID) of the cart this item belongs to.\n    product_id: (Inherited) The UUID of the game product.\n    quantity: (Inherited) The number of units.',
  )

/**
 * @description Validation Error
 */
export const cartAddItemToCart422Schema = z.lazy(() => HTTPValidationErrorSchema)

export const cartAddItemToCartMutationRequestSchema = z
  .lazy(() => cartItemCreateSchemaSchema)
  .describe('Schema for data needed when adding a new item to the cart.\n\nInherits `product_id` and `quantity` from the base schema.')

export const cartAddItemToCartMutationResponseSchema = z.lazy(() => cartAddItemToCart201Schema)