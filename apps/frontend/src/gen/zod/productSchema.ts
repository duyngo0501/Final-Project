/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { genreInfoSchema } from './genreInfoSchema.ts'
import { parentPlatformInfoSchema } from './parentPlatformInfoSchema.ts'
import { platformInfoSchema } from './platformInfoSchema.ts'
import { z } from 'zod'

export const productSchema = z.object({
  id: z.number().int(),
  slug: z.string(),
  name: z.string(),
  released: z.union([z.string().date(), z.null()]).optional(),
  tba: z.boolean().default(false),
  background_image: z.union([z.string().url(), z.null()]).optional(),
  rating: z.number().default(0),
  rating_top: z.number().int().default(0),
  ratings_count: z.number().int().default(0),
  metacritic: z.union([z.number().int(), z.null()]).optional(),
  playtime: z.number().int().default(0),
  suggestions_count: z.number().int().default(0),
  updated: z.union([z.string(), z.null()]).optional(),
  platforms: z.union([z.array(z.lazy(() => platformInfoSchema)), z.null()]).optional(),
  parent_platforms: z.union([z.array(z.lazy(() => parentPlatformInfoSchema)), z.null()]).optional(),
  genres: z.union([z.array(z.lazy(() => genreInfoSchema)), z.null()]).optional(),
})