/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { customGameCreateSchema } from './customGameCreateSchema.ts'
import { customGamePublicSchema } from './customGamePublicSchema.ts'
import { HTTPValidationErrorSchema } from './HTTPValidationErrorSchema.ts'
import { z } from 'zod'

/**
 * @description Successful Response
 */
export const productsCreateCustomGameEndpoint201Schema = z
  .lazy(() => customGamePublicSchema)
  .describe(
    'Schema used for returning custom game data in API responses.\n\nIncludes the database-generated ID and slug, in addition to base properties.\n\nAttributes:\n    id: The unique identifier (UUID) of the custom game entry.\n    slug: The unique, URL-friendly slug generated for the game.\n    name: (Inherited) Name of the game.\n    description: (Inherited) Optional description.\n    released: (Inherited) Optional release date.\n    background_image: (Inherited) Optional background image URL.',
  )

/**
 * @description Validation Error
 */
export const productsCreateCustomGameEndpoint422Schema = z.lazy(() => HTTPValidationErrorSchema)

export const productsCreateCustomGameEndpointMutationRequestSchema = z
  .lazy(() => customGameCreateSchema)
  .describe(
    'Schema used for creating a new custom game via API.\n\nInherits all fields from CustomGameBase.\nCurrently requires `name` explicitly (though already required in Base).\nCan be used to enforce specific fields during creation.',
  )

export const productsCreateCustomGameEndpointMutationResponseSchema = z.lazy(() => productsCreateCustomGameEndpoint201Schema)